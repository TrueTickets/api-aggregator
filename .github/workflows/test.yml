---
name: Test

on:
    pull_request:
        paths-ignore:
            - "README.md"
    push:
        paths-ignore:
            - "README.md"
jobs:
    test:
        name: Unit Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.23"

            - name: Download dependencies
              run: go mod download

            - name: Run unit tests
              run: go test ./... -v -race -coverprofile=coverage.out

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  file: ./coverage.out
                  flags: unittests
                  name: codecov-umbrella

    lint:
        name: Lint
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.23"

            - name: Run golangci-lint
              uses: golangci/golangci-lint-action@v4
              with:
                  version: latest
                  args: --timeout=5m

    integration-test:
        name: Integration Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Run integration tests with Docker Compose
              run: |
                  docker compose -f docker-compose.integration.yaml up --build \
                      --abort-on-container-exit --exit-code-from tavern
              env:
                  COMPOSE_HTTP_TIMEOUT: 300

            - name: Clean up Docker containers
              if: always()
              run: |
                  docker compose -f docker-compose.integration.yaml down --volumes --remove-orphans

    docker-security:
        name: Docker Build & Security Scan
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: false
                  tags: api-aggregator:test
                  load: true
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: "api-aggregator:test"
                  format: "sarif"
                  output: "trivy-results.sarif"
                  ignore-unfixed: true
                  trivyignores: ".trivyignore"

            - name: Upload Trivy scan results to GitHub Security tab
              uses: github/codeql-action/upload-sarif@v3
              if: always()
              with:
                  sarif_file: "trivy-results.sarif"

            - name: Run Trivy vulnerability scanner (table format)
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: "api-aggregator:test"
                  format: "table"
                  exit-code: "1"
                  ignore-unfixed: true
                  vuln-type: "os,library"
                  severity: "CRITICAL,HIGH"
                  trivyignores: ".trivyignore"
