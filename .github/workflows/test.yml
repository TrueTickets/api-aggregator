---
name: Test

on:
    pull_request:
        paths-ignore:
            - "README.md"
    push:
        paths-ignore:
            - "README.md"
jobs:
    test:
        name: Unit Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.23"

            - name: Download dependencies
              run: go mod download

            - name: Run unit tests
              run: go test ./... -v -race -coverprofile=coverage.out

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  file: ./coverage.out
                  flags: unittests
                  name: codecov-umbrella

    lint:
        name: Lint
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.23"

            - name: Run golangci-lint
              uses: golangci/golangci-lint-action@v4
              with:
                  version: latest
                  args: --timeout=5m

    integration-test:
        name: Integration Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Run integration tests with Docker Compose
              run: |
                  docker compose -f docker-compose.integration.yaml up --build --abort-on-container-exit --exit-code-from tavern
              env:
                  COMPOSE_HTTP_TIMEOUT: 300

            - name: Clean up Docker containers
              if: always()
              run: |
                  docker compose -f docker-compose.integration.yaml down --volumes --remove-orphans
